services:
  postgresql:
    image: postgres:13
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "yourpassword"
      POSTGRES_DB: "netsecure"
    volumes:
      - postgresql_data:/var/lib/postgresql/data

  influxdb:
    image: influxdb:latest
    restart: unless-stopped
    ports:
      - "8086:8086"
    volumes:
      - influxdb_data:/var/lib/influxdb2
      - influxdb_config:/etc/influxdb2

  backend:
    build:
      context: ./src/backend
      dockerfile: Dockerfile
    # ⚠️ Utilise l'env "réseau docker" (pas ./src/backend/.env)
    env_file:
      - ./config/backend_env/backend.env
    working_dir: /app
    ports:
      - "8081:8000"   # Go écoute sur 8000, exposé en 8081 sur l'hôte
    depends_on:
      - postgresql
      - influxdb
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  frontend:
    image: nginx:alpine
    volumes:
      - ./src/frontend/dist:/usr/share/nginx/html
      - ./src/frontend/nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "8080:80"
    depends_on:
      - backend

  mikrotik:
    image: evilfreelancer/docker-routeros:latest
    restart: unless-stopped
    cap_add:
      - NET_ADMIN
    devices:
      - "/dev/net/tun"
      - "/dev/kvm"
    ports:
      - "2222:22"    # SSH
      - "8728:8728"  # API
      - "8729:8729"  # API-SSL
      - "5900:5900"  # VNC
      - "8291:8291"  # Winbox
      - "8082:80"    # HTTP (exposé en 8082 côté hôte)
    volumes:
      - mikrotik_data:/routeros

  wireguard:
    image: linuxserver/wireguard
    restart: unless-stopped
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Rome
      - SERVERPORT=55300
      - PEERS=0
      - PEERDNS=auto
      - INTERNAL_SUBNET=10.100.99.0
    ports:
      - "55300:55300/udp"
      - "9090:9090"
    volumes:
      - ./src/wireguard_config:/config
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1

volumes:
  postgresql_data:
  influxdb_data:
  influxdb_config:
  mikrotik_data:
  wireguard_config:
